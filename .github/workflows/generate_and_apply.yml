name: Generate Terraform Code and Apply

on:
  workflow_dispatch:
    inputs:
      repositories:
        description: >
          JSON-encoded list of repositories (e.g.,
          - repository_name: repo1
            description: This is repo1
            visibility: public
            gitignore_template: None
          )
        required: false
        default: |
          []
      teams:
        description: >
          JSON-encoded list of teams (e.g.,
          - team_name: team1
            description: This is team1
            privacy: closed
            members:
              - username: user1
                role: maintainer
          )
        required: false
        default: |
          []

jobs:
  manage-resources:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Install pip-tools and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools --break-system-packages
          pip-sync requirements.txt

      - name: Run resource management script
        run: |
          python main.py
        env:
          REPOSITORIES: ${{ inputs.repositories }}
          TEAMS: ${{ inputs.teams }}
  
      - name: Export GitHub token
        env:
          GITHUB_TOKEN: ${{ secrets.GIST_GITHUB_TOKEN }}
        run: echo "Exporting GITHUB_TOKEN"

      - name: Terraform Init
        if: success()
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        if: success()
        run: terraform plan -out=tfplan
        working-directory: ./terraform

      - name: Terraform Apply
        if: success()
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform

      - name: Commit Terraform state and code
        if: success()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add ./terraform/
          git commit -m "Update Terraform state and code [skip ci]" || echo "No changes to commit"
          git push origin ${{ github.ref }}
